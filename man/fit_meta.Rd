% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_meta.R
\name{fit_meta}
\alias{fit_meta}
\title{Fit a meta-analytical model to extract global effect sizes across studies}
\usage{
fit_meta(meta_data, rand_trait = FALSE, fixed = NULL, digit = 3)
}
\arguments{
\item{meta_data}{A dataframe with rows representing records per studies,
including the effect sizes and required fixed and random effects.}

\item{rand_trait}{A boolean indicating whether to include a trait type as a
random effect in the model.}

\item{fixed}{A string indicating the name of the fixed effect (called exactly
as it is called in the dataframe \emph{meta_data}) if a meta-analytic model
includes a fixed predictor, and NULL (default) otherwise.}

\item{digit}{An integer indicating how many digits to display on the screen.}
}
\value{
A list of length eight, containing the results of
the meta-analysis: a global slope, its SE, a full model
fitted with REML, a null model fitted with ML,
a global model fitted with ML, results of LRT comparing the model
with the effect vs. the reduced one, the data used for the meta-analysis,
and heterogeneity metrics.
}
\description{
\code{fit_meta} fits mixed-effects meta-analytical model to extract a global
effect size across the studies
}
\details{
This function fits a mixed-effects meta-analytical model with
appropriate residual model structure to assess the significance of an overall
global effect size. Can be fit both with and without fixed effects. If fit
without any fixed effects, then the overall effect size across the studies is
obtained.
}
\examples{
\dontrun{
dat_sel_phen <- prepare_data(data = dat_Sel,
                             temperature = TRUE, precipitation = FALSE,
                             phenology = TRUE, morphology = FALSE)
test_sel <- extract_effects_all_ids(data = dat_sel_phen,
                                    condition = '3', nb_cores = 4L)
test_meta_sel <- fit_meta(test_sel)
test_meta_sel_Fitn <- fit_meta(test_sel, fixed = 'Fitness_Categ')


dat_T_phen <- prepare_data(data = dat_Trait,
                           temperature = TRUE, precipitation = FALSE,
                           phenology = TRUE, morphology = FALSE)
test_T_phen <- extract_effects_all_ids(data = dat_T_phen,
                                      condition = '2', nb_cores = 4L)
test_meta_T_phen <- fit_meta(test_T_phen)
test_meta_T_phen_Taxon <- fit_meta(test_T_phen, fixed = 'Taxon')
}


}
